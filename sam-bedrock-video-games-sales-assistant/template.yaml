AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-bedrock-video-games-sales-assistant
  Sample SAM Template for sam-bedrock-video-games-sales-assistant
  Author: Uriel Ramirez (beralfon@amazon.com)
  # Updated on 06-30-2025 by Runpeng Xia (runpeng@amazon.com):
  Attached a game review knowledge base to the agent with guardrail

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    MemorySize: 512

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Parameters:
  PostgreSQLDatabaseName:
    Type: String
    Description: PostgreSQL Database Name
    Default: "video_games_sales"
  AuroraMaxCapacity:
    Type: Number
    Description: Aurora Serverless DB Max Capacity
    Default: 2
  AuroraMinCapacity:
    Type: Number
    Description: Aurora Serverless DB Min Capacity
    Default: 1
  # for the new feature, additional parameters are added
  S3BucketName:
    Type: String
    Description: Enter the name of the S3 bucket to be created.
    Default: game-reviews-0630
  KnowledgeBaseName:
    Type: String
    Description: The name of the knowledge base.
    Default: game-kb-0630
  KnowledgeBaseDescription:
    Type: String
    Description: The description of the knowledge base.
    Default: Game reviews knowledge base
  DataSourceName:
    Type: String
    Description: The name of the data source.
    Default: game_reviews-0630
  DataSourceDescription:
    Type: String
    Description: The description of the data source.
    Default: Data Source for Amazon DA Assistant Knowledge Base



Conditions:
  IsUsEast1Region: !Equals [!Ref 'AWS::Region', 'us-east-1']

Rules:
  RegionCheck:
    Assertions:
      - Assert: 
          Fn::Equals:
            - !Ref "AWS::Region"
            - "us-east-1"
        AssertDescription: "This template can only be deployed in us-east-1 region"

Resources:

  #==============================================================================
  # S3 Bucket
  #==============================================================================

  DataSourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'sales-data-source-${AWS::Region}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  #==============================================================================
  # DynamoDB Table
  #==============================================================================

  QuestionAnswersHaiku35Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "id"
        AttributeType: "S"
      - AttributeName: "my_timestamp"
        AttributeType: "N"
      KeySchema:
      - AttributeName: "id"
        KeyType: "HASH"
      - AttributeName: "my_timestamp"
        KeyType: "RANGE"
      BillingMode: "PAY_PER_REQUEST"
      SSESpecification:
        SSEEnabled: True

  #==============================================================================
  # Lambda Function
  #==============================================================================
  
  AssistantAPIPostgreSQLHaiku35Function:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/assistant-api-postgresql-haiku-35/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Environment:
        Variables:
          SECRET_NAME: !Sub '${AWS::StackName}-secret-name'
          POSTGRESQL_HOST: !GetAtt DatabaseAssistantdatabaseproxy.Endpoint
          DATABASE_NAME: !Ref PostgreSQLDatabaseName
          QUESTION_ANSWERS_TABLE: !Ref QuestionAnswersHaiku35Table
      VpcConfig:
        SecurityGroupIds: 
          - !GetAtt SecurityGroupAssistant.GroupId
        SubnetIds: 
          - !Ref VPCAssistantPrivateSubnet1Subnet
          - !Ref VPCAssistantPrivateSubnet2Subnet
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !GetAtt AuroraSecretAssistant.Id
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt QuestionAnswersHaiku35Table.Arn

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

  #==============================================================================
  # Amazon VPC
  #==============================================================================

  VPCAssistant:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/21
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-vpc'
  
  VPCAssistantIngressSubnet1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: subnet-name
          Value: Ingress
        - Key: subnet-type
          Value: Public
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/IngressSubnet1
      VpcId: !Ref VPCAssistant

  VPCAssistantIngressSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/IngressSubnet1
      VpcId: !Ref VPCAssistant
  
  VPCAssistantIngressSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPCAssistantIngressSubnet1RouteTable
      SubnetId: !Ref VPCAssistantIngressSubnet1Subnet
  
  VPCAssistantIngressSubnet1DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCAssistantIGW
      RouteTableId: !Ref VPCAssistantIngressSubnet1RouteTable
    DependsOn:
      - VPCAssistantVPCGW
    
  VPCAssistantIngressSubnet2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: subnet-name
          Value: Ingress
        - Key: subnet-type
          Value: Public
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/IngressSubnet2
      VpcId: !Ref VPCAssistant
  
  VPCAssistantIngressSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/IngressSubnet2
      VpcId: !Ref VPCAssistant
  
  VPCAssistantIngressSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPCAssistantIngressSubnet2RouteTable
      SubnetId: !Ref VPCAssistantIngressSubnet2Subnet
  
  VPCAssistantIngressSubnet2DefaultRouteEF07E00F:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCAssistantIGW
      RouteTableId: !Ref VPCAssistantIngressSubnet2RouteTable
    DependsOn:
      - VPCAssistantVPCGW
  
  VPCAssistantPrivateSubnet1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: subnet-name
          Value: Private
        - Key: subnet-type
          Value: Private
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/PrivateSubnet1
      VpcId: !Ref VPCAssistant
  
  VPCAssistantPrivateSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/PrivateSubnet1
      VpcId: !Ref VPCAssistant
  
  VPCAssistantPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPCAssistantPrivateSubnet1RouteTable
      SubnetId: !Ref VPCAssistantPrivateSubnet1Subnet
  
  VPCAssistantPrivateSubnet2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: subnet-name
          Value: Private
        - Key: subnet-type
          Value: Private
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/PrivateSubnet2
      VpcId: !Ref VPCAssistant
  
  VPCAssistantPrivateSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant/PrivateSubnet2
      VpcId: !Ref VPCAssistant

  VPCAssistantPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPCAssistantPrivateSubnet2RouteTable
      SubnetId: !Ref VPCAssistantPrivateSubnet2Subnet

  VPCAssistantIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant

  VPCAssistantVPCGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref VPCAssistantIGW
      VpcId: !Ref VPCAssistant

  VPCAssistantSecretManagerEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DataSourceAssistantStack/VPCAssistant/SecretManagerEndpoint/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      SecurityGroupIngress:
        - CidrIp: !GetAtt VPCAssistant.CidrBlock
          Description: !Join
            - ''
            - - 'from '
              - !GetAtt VPCAssistant.CidrBlock
              - ':443'
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Name
          Value: DataSourceAssistantStack/VPCAssistant
      VpcId: !Ref VPCAssistant

  VPCAssistantSecretManagerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !GetAtt VPCAssistantSecretManagerEndpointSecurityGroup.GroupId
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref AWS::Region
          - .secretsmanager
      SubnetIds:
        - !Ref VPCAssistantPrivateSubnet1Subnet
        - !Ref VPCAssistantPrivateSubnet2Subnet
      VpcEndpointType: Interface
      VpcId: !Ref VPCAssistant

  DynamoDBGatewayEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 'dynamodb:*'
            Resource:
              - !GetAtt QuestionAnswersHaiku35Table.Arn
      RouteTableIds:
        - !Ref VPCAssistantPrivateSubnet1RouteTable
        - !Ref VPCAssistantPrivateSubnet2RouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.dynamodb'
      VpcId: !Ref VPCAssistant

  S3GatewayEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:*'
            Resource:
              - !GetAtt DataSourceBucket.Arn
              - Fn::Join:
                - ''
                - - Fn::GetAtt:
                      - DataSourceBucket
                      - Arn
                  - "/*"
      RouteTableIds:
        - !Ref VPCAssistantPrivateSubnet1RouteTable
        - !Ref VPCAssistantPrivateSubnet2RouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref VPCAssistant

  SecurityGroupAssistant:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DataSourceAssistantStack/SecurityGroupAssistant
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      VpcId: !Ref VPCAssistant

  SecurityGroupAssistantfromDataSourceAssistantStackSecurityGroupAssistant:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow connections to the database Cluster from the Proxy
      FromPort: !GetAtt DatabaseAssistant.Endpoint.Port
      GroupId: !GetAtt SecurityGroupAssistant.GroupId
      IpProtocol: tcp
      SourceSecurityGroupId: !GetAtt SecurityGroupAssistant.GroupId
      ToPort: !GetAtt DatabaseAssistant.Endpoint.Port
  
  #==============================================================================
  # Aurora Serverless PostgreSQL-Compatible Edition and Related Resources
  #==============================================================================

  AuroraSecretAssistant:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${AWS::StackName}-secret-name'
      Description: !Join
        - ''
        - - 'Generated for stack: '
          - !Ref AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: ' %+~`#$&*()|[]{}:;<>?!''/@"\'
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"postgres"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  
  AuroraSecretAssistantAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref AuroraSecretAssistant
      TargetId: !Ref DatabaseAssistant
      TargetType: AWS::RDS::DBCluster
  
  DatabaseAssistantSubnets:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for DatabaseAssistant database
      SubnetIds:
        - !Ref VPCAssistantPrivateSubnet1Subnet
        - !Ref VPCAssistantPrivateSubnet2Subnet
    
  DatabaseAssistant:
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Sub '${AWS::StackName}-database'
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-postgresql15
      DBSubnetGroupName: !Ref DatabaseAssistantSubnets
      DatabaseName: !Ref PostgreSQLDatabaseName
      EnableCloudwatchLogsExports:
        - postgresql
      EnableHttpEndpoint: true
      EngineMode: provisioned
      Engine: aurora-postgresql
      EngineVersion: '15.4'
      MasterUserPassword: !Join
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref AuroraSecretAssistant
          - ':SecretString:password::}}'
      MasterUsername: !Join
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref AuroraSecretAssistant
          - ':SecretString:username::}}'
      Port: 5432
      ServerlessV2ScalingConfiguration:
        MaxCapacity: !Ref AuroraMaxCapacity
        MinCapacity: !Ref AuroraMinCapacity
      VpcSecurityGroupIds:
        - !GetAtt SecurityGroupAssistant.GroupId
      AssociatedRoles:
          - FeatureName: s3Import
            RoleArn: !GetAtt DatabaseAssistantIAMRole.Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  
  DatabaseAssistantIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: DatabaseAssistantIAMRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds:CreateDBSnapshot
                  - rds:CreateDBClusterSnapshot
                  - rds:RestoreDBClusterFromSnapshot
                  - rds:RestoreDBClusterToPointInTime
                  - rds:RestoreDBInstanceFromDBSnapshot
                  - rds:RestoreDBInstanceToPointInTime
                Resource:
                    !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${AWS::StackName}-database'
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub 'arn:aws:s3:::sales-data-source-${AWS::Region}-${AWS::AccountId}/*'
                  - !Sub 'arn:aws:s3:::sales-data-source-${AWS::Region}-${AWS::AccountId}'
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
        Version: '2012-10-17'

  DatabaseAssistantwriter:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref DatabaseAssistant
      DBInstanceClass: db.serverless
      Engine: aurora-postgresql
      PromotionTier: 0
      PubliclyAccessible: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  DatabaseAssistantdatabaseproxyIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
        Version: '2012-10-17'
    
  DatabaseAssistantdatabaseproxyIAMRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource: !Ref AuroraSecretAssistant
        Version: '2012-10-17'
      PolicyName: !Sub '${AWS::StackName}-db-proxy-policy'
      Roles:
        - !Ref DatabaseAssistantdatabaseproxyIAMRole
    
  DatabaseAssistantdatabaseproxy:
    Type: AWS::RDS::DBProxy
    Properties:
      Auth:
        - AuthScheme: SECRETS
          IAMAuth: DISABLED
          SecretArn: !Ref AuroraSecretAssistant
      DBProxyName: !Sub '${AWS::StackName}-db-proxy'
      DebugLogging: true
      EngineFamily: POSTGRESQL
      RequireTLS: false
      RoleArn: !GetAtt DatabaseAssistantdatabaseproxyIAMRole.Arn
      VpcSecurityGroupIds:
        - !GetAtt SecurityGroupAssistant.GroupId
      VpcSubnetIds:
        - !Ref VPCAssistantPrivateSubnet1Subnet
        - !Ref VPCAssistantPrivateSubnet2Subnet
    
  DatabaseAssistantdatabaseproxyProxyTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties:
      ConnectionPoolConfigurationInfo: {}
      DBClusterIdentifiers:
        - !Ref DatabaseAssistant
      DBProxyName: !Ref DatabaseAssistantdatabaseproxy
      TargetGroupName: default


##########################################
#   Resources for the new feature        #                         
##########################################
############# S3 ############
  # Create a S3 bucket
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName:
        Fn::Sub: ${S3BucketName}-${AWS::Region}-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true


  # Lambda role for PDF upload
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${S3BucketName}-${AWS::Region}-${AWS::AccountId}/*"


  # Lambda for PDF download and S3 upload
  DownloadAndUploadLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.12
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 30
      MemorySize: 256
      Code:
        ZipFile: |
          import boto3
          import urllib.request
          import os
          import cfnresponse
          
          def handler(event, context):
            try:
              if event['RequestType'] in ['Create', 'Update']:
                s3 = boto3.client('s3')
                bucket_name = event['ResourceProperties']['BucketName']
                github_url = event['ResourceProperties']['GitHubUrl']
                file_name = github_url.split('/')[-1]
                
                # Download from GitHub
                print(f"Downloading file from {github_url}")
                temp_file_path = f'/tmp/{file_name}'
                
                req = urllib.request.Request(github_url, 
                                            headers={'User-Agent': 'AWS CloudFormation Custom Resource'})
                
                with urllib.request.urlopen(req) as response, open(temp_file_path, 'wb') as out_file:
                  out_file.write(response.read())
                
                # Upload to S3
                print(f"Uploading to S3 bucket {bucket_name}")
                s3.upload_file(temp_file_path, bucket_name, file_name)
                os.remove(temp_file_path)
                print("Upload successful")
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              else:  
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
            except Exception as e:
              print(f"Error: {str(e)}")
              cfnresponse.send(event, context, cfnresponse.FAILED, {'Error': str(e)})


  # Trigger for PDF download and upload
  TriggerDownloadAndUpload:
    Type: Custom::DownloadAndUpload
    DependsOn: S3Bucket
    Properties:
      ServiceToken: !GetAtt DownloadAndUploadLambda.Arn
      BucketName: !Ref S3Bucket
      GitHubUrl: 'https://raw.githubusercontent.com/KaJunho/public-documents/main/GameReviews.pdf'


###### OpenSearch Serverless ######
  # OSS encryption
  NovaOSSEncryptionPolicy:
    Type: AWS::OpenSearchServerless::SecurityPolicy
    Properties:
      Name: game-encryption-policy
      Type: encryption
      Description: Encryption policy for game-review-collection
      Policy: !Sub |
        {
          "Rules": [
            {
              "ResourceType": "collection",
              "Resource": ["collection/game-review-collection"]
            }
          ],
          "AWSOwnedKey": true
        }


  # OSS network
  NovaOSSNetworkPolicy:
    Type: AWS::OpenSearchServerless::SecurityPolicy
    DependsOn:
      - NovaOSSEncryptionPolicy
    Properties:
      Name: game-network-policy
      Type: network
      Description: Network policy for game-review-collection
      Policy: 
        Fn::Sub: '[{"Description": "Public access for game-review-collection",
          "Rules": [{"ResourceType": "dashboard", "Resource": ["collection/game-review-collection"]},
          {"ResourceType": "collection", "Resource": ["collection/game-review-collection"]}],
          "AllowFromPublic": true}]'


  # OSS collection
  NovaOSSCollection:
    Type: AWS::OpenSearchServerless::Collection
    DependsOn: 
      - NovaOSSEncryptionPolicy
      - NovaOSSNetworkPolicy
    Properties:
      Name: game-review-collection
      Type: VECTORSEARCH
      Description: 'Vector search collection for game reviews KB'


  # OSS data access policy
  NovaOSSAccessPolicy:
    Type: AWS::OpenSearchServerless::AccessPolicy
    DependsOn:
      - NovaOSSNetworkPolicy
      - KBRole
    Properties:
      Name: game-access-policy
      Type: data
      Description: 'Allow Bedrock to access the vector collection'
      Policy: 
        Fn::Sub:
          - |
            [
              {
                "Rules": [
                  {
                    "Resource": ["collection/game-review-collection"],
                    "Permission": [
                      "aoss:CreateCollectionItems", 
                      "aoss:DeleteCollectionItems",
                      "aoss:UpdateCollectionItems", 
                      "aoss:DescribeCollectionItems"
                    ],
                    "ResourceType": "collection"
                  },
                  {
                    "ResourceType": "index",
                    "Resource": ["index/game-review-collection/*"],
                    "Permission": [
                      "aoss:CreateIndex",
                      "aoss:DescribeIndex",
                      "aoss:ReadDocument",
                      "aoss:WriteDocument",
                      "aoss:UpdateIndex",
                      "aoss:DeleteIndex"
                    ]
                  }
                ],
                "Principal": [
                  "${RoleArn}",
                  "arn:aws:iam::${AWS::AccountId}:root",
                  "arn:aws:iam::${AWS::AccountId}:role/Admin",
                  "arn:aws:iam::${AWS::AccountId}:role/Admin-OneClick"
                ]
              }
            ]
          - RoleArn: !GetAtt KBRole.Arn


  # OSS index
  NovaOSSIndex:
    Type: AWS::OpenSearchServerless::Index
    DependsOn:
      - NovaOSSCollection
      - NovaOSSAccessPolicy
    Properties:
      CollectionEndpoint: !GetAtt NovaOSSCollection.CollectionEndpoint
      IndexName: game-review-index
      Settings:
        Index:
          Knn: true
      Mappings:
        Properties:
          vector:
            Type: knn_vector
            Dimension: 1024
            Method:
              Engine: faiss
              Name: hnsw
              SpaceType: l2
              Parameters: {}
          text:
            Type: text
          metadata:
            Type: text
            Index: false


  # Custom resource to add a 10-second delay after VectorIndex creation
  DelayFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.9
      Timeout: 30
      Code:
        ZipFile: |
          import time
          import cfnresponse
          
          def handler(event, context):
              print('Received event: ' + str(event))
              
              if event['RequestType'] == 'Create' or event['RequestType'] == 'Update':
                  # Sleep for 10 seconds
                  print('Sleeping for 10 seconds...')
                  time.sleep(10)
                  print('Sleep complete')
              
              cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              return

  DelayAfterVectorIndex:
    Type: Custom::Delay
    Properties:
      ServiceToken: !GetAtt DelayFunction.Arn
    DependsOn: NovaOSSIndex


############# KB ##############
  # Bedrock service role
  KBRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "AmazonBedrockExecutionRoleForKnowledgeBase_${KnowledgeBaseName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - bedrock.amazonaws.com
          Action:
            - sts:AssumeRole
            - sts:TagSession
          Condition:
            StringEquals:
              aws:SourceAccount:
                Fn::Sub: ${AWS::AccountId}
            ArnLike:
              aws:SourceArn:
                Fn::Sub: arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:knowledge-base/*
      Policies:
      - PolicyName: FoundationModelPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:ListCustomModels
              Resource: '*'
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
                - bedrock:InvokeModelWithResponseStream
                - bedrock:GetFoundationModelAvailability
              Resource:
                Fn::Sub: arn:aws:bedrock:${AWS::Region}::foundation-model/*
              Sid: BedrockInvokeModelStatement
      - PolicyName: OSSPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - aoss:APIAccessAll
            Resource:
              Fn::Sub: arn:aws:aoss:${AWS::Region}:${AWS::AccountId}:collection/*
            Sid: OpenSearchServerlessAPIAccessAllStatement
      - PolicyName: S3Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:ListBucket
            Resource: arn:aws:s3:::*
            Sid: S3ListBucketStatement
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource:
              Fn::Sub: arn:aws:s3:::${S3BucketName}-${AWS::Region}-${AWS::AccountId}/*
            Sid: S3GetObjectStatement
      - PolicyName: BedrockChatDoc
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'bedrock:Retrieve'
                - 'bedrock:RetrieveAndGenerate'
              Resource: '*'
      - PolicyName: Guardrails
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'bedrock:ApplyGuardrail'
                - 'lambda:InvokeFunction'
              Resource: '*'


  # BedrockKnowledgeBase
  BedrockKnowledgeBase:
    Type: AWS::Bedrock::KnowledgeBase
    DependsOn: ["TriggerDownloadAndUpload", "NovaOSSAccessPolicy", "NovaOSSIndex", "DelayAfterVectorIndex"]
    Properties:
      Name: !Ref KnowledgeBaseName
      Description: !Ref KnowledgeBaseDescription
      RoleArn: !GetAtt KBRole.Arn
      KnowledgeBaseConfiguration:
        Type: VECTOR
        VectorKnowledgeBaseConfiguration:
          EmbeddingModelArn: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-embed-text-v2:0
      StorageConfiguration:
        Type: OPENSEARCH_SERVERLESS
        OpensearchServerlessConfiguration:
          CollectionArn: !GetAtt NovaOSSCollection.Arn
          VectorIndexName: game-review-index
          FieldMapping:
            VectorField: vector
            TextField: text
            MetadataField: metadata


  # KB data source
  KnowledgeBaseDataSource:
    Type: AWS::Bedrock::DataSource
    DependsOn:
      - BedrockKnowledgeBase
    Properties:
      Name: !Ref DataSourceName
      Description: !Ref DataSourceDescription
      KnowledgeBaseId: !Ref BedrockKnowledgeBase
      DataSourceConfiguration:
        Type: S3
        S3Configuration:
          BucketArn: !GetAtt S3Bucket.Arn
          InclusionPrefixes:
            - "GameReviews.pdf"


############ Guardrail ###########
  PIIGuardrail:
    Type: AWS::Bedrock::Guardrail
    Properties:
      BlockedInputMessaging: "Sorry, I cannot answer this question."
      BlockedOutputsMessaging: "Sorry, I cannot answer this question."
      Description: "This guardrail blocks sensitive PII."
      Name: "PIIGuardrail"
      SensitiveInformationPolicyConfig: 
        PiiEntitiesConfig:
          - Type: NAME 
            Action: ANONYMIZE
            InputEnabled: false
            OutputEnabled: true
          - Type: EMAIL
            Action: ANONYMIZE
            InputEnabled: false
            OutputEnabled: true


  #==============================================================================
  # Bedrock Agent and Related Resources
  #==============================================================================
  BedrockAgentPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AmazonBedrockAgentPolicy
            Effect: Allow
            Action:
              - bedrock:InvokeModel
              - bedrock:InvokeModelWithResponseStream
              - bedrock:GetInferenceProfile
              - bedrock:GetFoundationModel
            Resource:
              - 'arn:aws:bedrock:*::foundation-model/anthropic.claude-3-5-haiku-20241022-v1:0'
              - !Sub 'arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/us.anthropic.claude-3-5-haiku-20241022-v1:0'

  BedrockAgentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AmazonBedrockAgentRole
            Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess
        - !Ref BedrockAgentPolicy

  BedrockAgent:
    Type: AWS::Bedrock::Agent
    DependsOn: ["BedrockAgentRole", "PIIGuardrail", "BedrockKnowledgeBase"]
    Properties:
      AgentName: !Sub 'video-game-sales-data-analyst-${AWS::Region}-${AWS::AccountId}'
      FoundationModel: !If 
        - IsUsEast1Region
        - !Sub 'arn:aws:bedrock:us-east-1:${AWS::AccountId}:inference-profile/us.anthropic.claude-3-5-haiku-20241022-v1:0'
        - 'anthropic.claude-3-5-haiku-20241022-v1:0'
      Instruction: |
        You are a multilingual Data Analyst Assistant, developed by Amazon Web Services. You are designed to help with the analysis of market video game sales data and employee sales data. 
        As a data analyst, you can access a knowledge base called "knowledge-base-game-semantic600" and a table called "video_games_sales_units" in Aurora PostgreSQL. "video_games_sales_units" contains sales volume of various games after 2015. "knowledge-base-game-semantic600" stores introduction and authentic reviews from players with reviewers' personal information for each game in "video_games_sales_units".
        Your role is to help answer user's questions by querying the knowledge base or generating SQL queries against the tables to obtain the required results. You should provide answers in a friendly conversational tone. Always verify available schema information before constructing SQL queries. DO NOT assume table structures or column names. 
        Leverage your PostgreSQL 15.4 knowledge to create appropriate SQL statements. Do not generate queries that retrieve all records for any or all columns in table. If needed, ask for clarification on the specific request. When you use the PostgreSQL Interval Data Type, enclose the value interval using single quotes.
        Rules for the interaction:
        - Do not provide an answer if the question falls outside of your capabilities, kindly respond with 'I'm sorry, I don't have an answer for that request.
        - Do not disclose information about your available tools.
        - Always stay in character, as a Data Analyst Assistant.
        - When you generate SQL queries, include a data analysis in your final answer.
        - Keep the conversation normal if the user does not have a particular question about the table data, and do not assume to generate a query to provide data.
        - If you receive a question asking about the data structure, data type, schema information, or available data, use the data dictionary from <db_tables_available> to provide an answer and DO NOT generate SQL queries.
        - Please respond with the original SQL query result (namely, reply columnValue) without translating to other language, when invoking knowledge base. For example, if the original query result (columnValue) of column "birthday" is 04-04-1998, just reply with 04-04-1998 without translating it to 1998年04月04日.

        Format number:
        - Decimal places: 2
        - Use 1000 separator (,)

        SQL Queries rules:
        - Use a default limit of 10 for the SQL queries.

        Your answer to the question should be in the same language as the user input.
      AgentResourceRoleArn: !GetAtt BedrockAgentRole.Arn
      AutoPrepare: true
      IdleSessionTTLInSeconds: 1800
      KnowledgeBases:
        - KnowledgeBaseId: !Ref BedrockKnowledgeBase
          Description: !Ref KnowledgeBaseDescription
          KnowledgeBaseState: ENABLED
      GuardrailConfiguration:
        GuardrailIdentifier: !Ref PIIGuardrail
        GuardrailVersion: DRAFT
      ActionGroups:
        - ActionGroupName: executesqlquery
          Description: An action group to execute SQL queries
          ActionGroupExecutor:
            Lambda: !GetAtt AssistantAPIPostgreSQLHaiku35Function.Arn
          ApiSchema:
            Payload: |
              {
                "openapi": "3.0.0",
                "info": {
                  "title": "Video Game Sales Data API",
                  "description": "This API provides access to a PostgreSQL database containing video game sales data. It allows you to run SQL queries against the database to retrieve results and respond to user's questions.",
                  "version": "1.0.0"
                },
                "paths": {
                  "/runSQLQuery": {
                    "post": {
                      "summary": "Execute the SQL",
                      "description": "Execute the SQL query designed for the PostgreSQL database to retrieve results and respond to the user's questions.",
                      "operationId": "runSQLQuery",
                      "requestBody": {
                        "required": true,
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "SQLQuery": {
                                  "type": "string",
                                  "description": "SQL Query"
                                }
                              },
                              "required": [
                                "SQLQuery"
                              ]
                            }
                          }
                        }
                      },
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "description": "SQL query results returned",
                                    "properties": {
                                      "data": {
                                        "type": "array",
                                        "description": "The data for the SQL query results returned"
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Aditional information about the SQL query results returned (optional)"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "Bad request. One or more required fields are missing or invalid."
                        }
                      }
                    }
                  },
                  "/getCurrentDate": {
                    "get": {
                      "summary": "Get current date",
                      "description": "Returns the current date in YYYY/MM/DD format to provide time context to the agent",
                      "operationId": "getCurrentDate",
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "currentDate": {
                                    "type": "string",
                                    "description": "Current date in YYYY/MM/DD format",
                                    "example": "2023/11/15"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "Bad request. One or more required fields are missing or invalid."
                        }
                      }
                    }
                  },
                  "/getTablesInformation": {
                    "get": {
                      "summary": "Get tables information",
                      "description": "Provides information related to the data tables available to generate the SQL queries to answer the users questions",
                      "operationId": "getTablesInformation",
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "tablesInformation": {
                                    "type": "string",
                                    "description": "Descriptions, schema tables, a dictionary explaining each table column, and business rules associated with the tables"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "Bad request. One or more required fields are missing or invalid."
                        }
                      }
                    }
                  }
                }
              }
  
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AssistantAPIPostgreSQLHaiku35Function
      Action: lambda:InvokeFunction
      Principal: bedrock.amazonaws.com
      SourceArn: !GetAtt BedrockAgent.AgentArn
    DependsOn:
      - BedrockAgent



Outputs:
  S3BucketName:
    Description: "Name of the created S3 bucket"
    Value: !Ref S3Bucket
  KnowledgeBaseId:
    Description: "ID of the created Knowledge Base"
    Value: !Ref BedrockKnowledgeBase
  GuardrailId:
    Description: "ID of the created Guardrail"
    Value: !Ref PIIGuardrail
  DatabaseClusterName:
    Description: "Database Cluster Name to Connect Using the Query Editor"
    Value: !Ref DatabaseAssistant
  SecretARN:
    Description: "Secret ARN for Database Connection"
    Value: !GetAtt AuroraSecretAssistant.Id
  QuestionAnswersTableName:
    Description: "Table Name of Questions and Answers"
    Value: !Ref QuestionAnswersHaiku35Table
  QuestionAnswersTableArn:
    Description: "Table ARN of Questions and Answers"
    Value: !GetAtt QuestionAnswersHaiku35Table.Arn
  LambdaFunctionArn:
    Description: "Lambda Function Arn"
    Value: !GetAtt AssistantAPIPostgreSQLHaiku35Function.Arn
  LambdaFunctionName:
    Description: "Lambda Function Name"
    Value: !Ref AssistantAPIPostgreSQLHaiku35Function
  DataSourceBucketName:
    Description: "Bucket Name to Upload Data Source for the Database"
    Value: !Ref DataSourceBucket
  AuroraServerlessDBClusterArn:
    Description: "The Aurora Serverless DB cluster ARN"
    Value: !GetAtt DatabaseAssistant.DBClusterArn
  AgentARN:
    Description: "Agent ARN"
    Value: !GetAtt BedrockAgent.AgentArn
  AgentId:
    Description: "Agent ID"
    Value: !GetAtt BedrockAgent.AgentId
  AccountId:
    Description: "AWS Account ID"
    Value: !Ref AWS::AccountId
